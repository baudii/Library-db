services:
  musiclib-db:
    container_name: musiclib-db
    build:
      context: .
      dockerfile: MusicLibDb/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      authenticatedb:
        condition: service_healthy
      SongsDb:
        condition: service_healthy
    environment:
      - IS_DOCKER=TRUE;
    
  SongsDb:
    image: postgres:17.0
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: SongsDb
    volumes:
      - ./data/SongsDb:/var/lib/postgresql/data  # Монтируем директорию с данными
      - ./dumps/SongsDb.sql:/docker-entrypoint-initdb.d/SongsDb.sql  # Монтируем SQL дамп
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  authenticatedb:
    image: postgres:17.0
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: authenticatedb
    volumes:
      - ./data/authenticatedb:/var/lib/postgresql/data  # Монтируем директорию с данными
      - ./dumps/authenticatedb.sql:/docker-entrypoint-initdb.d/authenticatedb.sql  # Монтируем SQL дамп
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
